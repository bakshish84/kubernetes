In Kubernetes, a Pod is the smallest and simplest unit in the Kubernetes object model that you can create or deploy. A Pod represents a running process on your cluster 
and encapsulates an application container, storage resources, a unique network IP, and options that govern how the container(s) should run.

In production you will work with the higher level resources like Deployments and Jobs and let Kubernetes manage the underlying pods.

A Pod is a logical host for one or more containers. It represents a single instance of a running process in the cluster and is the smallest deployable unit in Kubernetes. Each Pod runs on a node and contains the containers that are tightly coupled, sharing the same network namespace, storage volumes, and other resources.

A Pod can contain single container or multiple containers.

Pod Lifecycle:

A Pod goes through several states from creation to termination.

1. Pending: The pod has been accepted by kubernetes system, but one or more containers havent started yet. (waiting for resource and scheduling)
2. Running: The Pod has been bound to node and all containers have been created.
3. Succeeded: All containers in Pod have been terminated succesfully, and pod's work is complete.
4. Failed: All containers in a pod have terminatwed with an error.
5. Unknown: The state of Pod could not be determined.